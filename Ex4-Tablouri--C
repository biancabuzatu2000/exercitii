#include <stdio.h>
#include <string.h>
#define N 80

Problema 2 : 
//1.citire tablou
//2.afisare tablou
//3.ordonare crescatoare -bubble sort
//4.cautare binara a unui numar in tablou
//5.interschimbarea a doua valori dintr-un tablou
//6.inversarea tabloului
//7.cautarea numerelor pare dintr-un tablou si suma lor

void citire(int a[N],int n)
{
    for(int i=0;i<n;i++)
    {
        {
            scanf("%d",&a[i]);
        }
    }
}

void afisare(int a[N],int n)
{
 for(int i=0;i<n;i++){
    {
        printf("%d",a[i]);

    }
 }
}

void ordonare(int a[N],int n)
{
    for(int i=0;i<=n-2;i++)
    {
        for(int j=i+1;j<=n-1;j++)
        {
            if(a[i]>a[j])
            {
                int temp=a[i];
                a[i]=a[j];
                a[j]=temp;
            }
        }
    }
}
int cautare_binara(int a[N],int n,int x)
{
    int i=0;
    int j=n-1;
    while(i<=j)
    {
        int m=(i+j)/2;
        if(x==a[m])
            return 1;
        else if(x<a[m])
            j=m-1;
        else
            i=m+1;
    }
    if(i>j)
        return 0;
}

void interschimbare(int a[N],int n,int i ,int j )
{
int temp=a[i];
a[i]=a[j];
a[j]=temp;
}

void inversare(int a[N],int n)
{
    int i=0;
    int j=n-1;
    while(i<=j){
        int temp=a[i];
        a[i]=a[j];
        a[j]=temp;
        i++;
        j--;
    }
}
int numere_pare(int a[],int n)
{
   int s=0;
    for(int i=0;i<n;i++)
    {
        if(a[i]%2==0)
            s=s+a[i];
    }
    return s;
}




int main() {
int n,x,i,j;
int a[N];
printf("n=");
scanf("%d",&n);
citire(a,n);
afisare(a,n);
printf("\n");
ordonare(a,n);
afisare(a,n);
printf("\n");
printf("Valoarea cautata: ");
scanf("%d",&x);
if(cautare_binara(a,n,x)==0)
    printf("Valoarea nu exista in tablou");
    else
        printf("Valoarea exista in tablou");

printf("\n");
printf("Pozitia primei valori : ");
scanf("%d",&i);
printf("Pozitia valorii 2 : ");
scanf("%d",&j);
interschimbare(a,n,i,j);
afisare(a,n);
printf("\n");
printf("Matricea inversata este: ");
inversare(a,n);
afisare(a,n);
printf("\n");
printf("Suma numerelor pare este : %d",numere_pare(a,n));

    return 0;
}





Problema 2.1 
Siruri de caracter 


#include <stdio.h>
#include <stdlib.h>

void citire(char a[])
{
  printf("Dati sirul ");
  gets(a);
}

void afisare(char a[])
{
    printf("Sirul este %s\n",a);

}

int main()
{
   char a[30];
    char b[30];

   citire(a);
   afisare(a);
   citire(b);
   afisare(b);

  if(strlen(a)==strlen(b)) //din punct de vedere al lungimii
    printf("Sirurile sunt egale");
   else
    if(strlen(a)>strlen(b))
    printf("a este mai mare decat b");
   else
    printf("b este mai mare decat a");
    printf("\n");

if(strcmp(a,b)==0)
    printf("Cele doua sunt identice");
else if(strcmp(a,b)<0)
printf("b este mai mare decat a ");
else printf("a este mai mare decat b");
printf("\n");

char c;
printf("Dati valoarea caracterului:");
scanf("%c",&c);
if(strchr(a,c)!=NULL)//cauta un caracter in sir si intoarce subsirul care incepe cu acel caracter
    printf("Caracterul exista pe pozitia : %d si subsirul este : %s",strchr(a,c)-a,strchr(a,c));
else
    printf("Caracterul nu exista");
    printf("\n");
 printf("\n");

if(strstr(a,b)!=NULL)

    printf("Sirul b apare in sirul a, pe pozitia %d si subsirul este %s",strstr(a,b)-a,strstr(a,b));
    else
        printf("Sirul nu apare");
printf("\n");

char d[30];
strcpy(d,a);
printf("Sirul d este %s\n",d);
strcat(d," ");
strcat(d,b);
printf("Sirul d este %s\n",d);
printf("\n");

char s[30];
printf("Dati cuvantul :");
scanf("%s",s);
fflush(stdin);

char e;
printf("Dati caracterul");
scanf("%c",&e);

if(strchr(s,e)!=NULL)
{
    int poz=strchr(s,e)-s;
    strcpy(s+poz,s+poz+1);
    printf("Sirul rezultat este: %s",s);

}
else
printf("Nu exista caracterul.");
    return 0;
}
